/contilisto-app
â”œâ”€â”€ netlify/
â”‚   â””â”€â”€ functions/
â”‚       â”œâ”€â”€ extract-invoice.ts              # [âœ…] OCR simple: extrae texto de PDF y devuelve texto plano
â”‚       â””â”€â”€ extract-invoice-layout.ts       # [ðŸ§ª] (opcional) OCR con layout visual: bloques con posiciÃ³n
â”‚
â”œâ”€â”€ public/
â”‚   â””â”€â”€ pdfWorker.js                        # [âœ…] Worker de pdfjs-dist para OCR en el cliente
â”‚
â”œâ”€â”€ src/
â”‚   â”œâ”€â”€ ai/
â”‚   â”‚   â”œâ”€â”€ extractInvoiceDataWithAI.ts         # [âœ…] Extrae asientos contables desde texto plano usando GPT
â”‚   â”‚   â”œâ”€â”€ extractInvoiceDataWithLayoutAI.ts   # [ðŸ§ª] (opcional) Extrae desde bloques visuales (GPT + layout)
â”‚   â”‚   â””â”€â”€ extractTextBlocksFromPDF.ts         # [ðŸ§ª] Extrae bloques con posiciÃ³n desde PDF (para layout)
â”‚
â”‚   â”œâ”€â”€ components/
â”‚   â”‚   â”œâ”€â”€ PDFUploader.tsx                  # [âœ…] Componente drag & drop para subir PDF y lanzar parsePDF
â”‚   â”‚   â””â”€â”€ JournalPreviewModal.tsx          # [âœ…] Modal para revisar y confirmar los asientos contables
â”‚
â”‚   â”œâ”€â”€ pages/
â”‚   â”‚   â””â”€â”€ EntitiesDashboard.tsx            # [âœ…] Vista principal de entidades, integra PDFUploader y tabla
â”‚
â”‚   â”œâ”€â”€ services/
â”‚   â”‚   â”œâ”€â”€ journalService.ts                # [âœ…] Procesamiento y guardado de asientos contables
â”‚   â”‚   â”œâ”€â”€ extractInvoiceFromAPI.ts         # [âœ…] Cliente para llamar a /api/extractinvoice (OCR simple)
â”‚   â”‚   â”œâ”€â”€ extractInvoiceFromLayoutAPI.ts   # [ðŸ§ª] (opcional) Cliente para llamar a layout API (layout OCR)
â”‚   â”‚   â”œâ”€â”€ firestoreLogService.ts           # [âœ…] Registro de facturas procesadas en Firestore
â”‚   â”‚   â””â”€â”€ localLogService.ts               # [âœ…] Registro local en localStorage de facturas ya procesadas
â”‚
â”‚   â”œâ”€â”€ types/
â”‚   â”‚   â”œâ”€â”€ JournalEntry.ts                  # [âœ…] Tipado principal de los asientos contables
â”‚   â”‚   â”œâ”€â”€ AccountTypes.ts                  # [âœ…] Estructura del plan contable (PUC)
â”‚   â”‚   â””â”€â”€ TextBlock.ts                     # [ðŸ§ª] Tipo para bloques con posiciÃ³n (layout visual)
â”‚
â”‚   â”œâ”€â”€ utils/
â”‚   â”‚   â””â”€â”€ accountPUCMap.ts                 # [âœ…] LÃ³gica de normalizaciÃ³n contable segÃºn PUC Ecuador
â”‚
â”œâ”€â”€ .env                                     # [âœ…] Contiene VITE_OPENAI_API_KEY y demÃ¡s secretos
â”œâ”€â”€ tsconfig.json                            # [âœ…] Soporte para mÃ³dulos ESNext + Firebase + Netlify
â”œâ”€â”€ tailwind.config.js                       # [âœ…] Tailwind configurado para analizar todo src/
â”œâ”€â”€ vite.config.ts                           # [âœ…] Incluye plugin React, puerto 5173, acceso a /netlify/functions/